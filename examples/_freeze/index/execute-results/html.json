{
  "hash": "c3e4b7515532a23b6b4f8ca121b2fff4",
  "result": {
    "markdown": "---\ntitle: Geometry example\nexecute:\n  daemon: 999999\n---\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing DynamicObjects\n\n\"\"\"\nA common base type for shapes.\n\"\"\"\n@dynamic_type DynamicShape\n\ndescription(what::DynamicShape) = \"A $(what) has an area of $(what.area).\"\n\n\"\"\"\nA fancy rectangle.\n\"\"\"\n@dynamic_object Rectangle <: DynamicShape height::Number width=1  \narea(what::Rectangle) = what.height * what.width\n\n\"\"\"\nA boring circle.\n\"\"\"\n@dynamic_object Circle <: DynamicShape radius::Number\narea(what::Circle) = what.radius^2 * pi \n\nprintln(Rectangle(10).description)\nprintln(Circle(20).description)\nCircle(20)  \n\nCircle(20).cached_area\n\nCircle(20) |> update(:area) |> cached(:description) \nCircle(20) |> update(:area) |> cached(:description) \n\n# unpack(Circle(20))\nDynamicObjects.unpack(Circle(20)) |> println\nDynamicObjects.unpack(Rectangle(10, 20)) |> println\nDynamicObjects.unpack(Rectangle(10, 20), :height) |> println\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nA Rectangle(height = 10, width = 1) has an area of 10.\nA Circle(radius = 20,) has an area of 1256.6370614359173.\n[20]\n[10, 20]\n[10]\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}